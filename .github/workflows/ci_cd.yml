name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Triggers the pipeline on push to `main` branch
  pull_request:
    branches:
      - main  # Triggers on pull requests to `main`

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Images
        run: |
          docker-compose -f docker-compose.yml build

      - name: Start Services with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Install dependencies
        run: |
          docker-compose exec -T django pip install --no-cache-dir -r requirements.txt

      - name: Run migrations
        run: |
          docker-compose exec -T django python manage.py migrate

      - name: Run tests
        run: |
          docker-compose exec -T django python manage.py test

      - name: Push Docker Image to Docker Hub (Optional)
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag cycular_ecommerce-django ${{ secrets.DOCKER_USERNAME }}/cycular_ecommerce:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/cycular_ecommerce:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Production Server (Optional)
        run: |
          # Add deployment steps, like deploying to AWS, Heroku, etc.
